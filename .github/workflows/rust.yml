name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    paths:
      - '.cargo/**'
      - '.github/workflows/rust.yml'
      - 'build.rs'
      - 'src/**'
      - 'tests/**'
      - 'Cargo.*'
      - 'Cargo.*'
      - 'rustfmt.toml'

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-${{ runner.arch }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-cargo-
      - run: cargo verify-project
      - run: rustup component add --toolchain nightly rustfmt
      - run: cargo +nightly fmt --check --all --message-format short

  build:
    needs:
      - check

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        php: [ '8.2', '8.3', '8.4' ]
        exclude:
          - os: macos-latest
            php: '8.2'

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-${{ runner.arch }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-${{ runner.arch }}-cargo-
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
        env:
          phpts: ts
      - if: ${{ runner.os == 'macOS' }}
        run: echo "LIBRARY_PATH=$(php-config --prefix)/lib" >> "$GITHUB_ENV"
      - uses: taiki-e/install-action@v2
        with:
          tool: nextest
      - run: cargo clippy
      - run: cargo build
      - run: cargo nextest run
